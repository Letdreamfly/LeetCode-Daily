"""
给定两个字符串 s1 和 s2，请编写一个程序，确定其中一个字符串的字符重新排列后，能否变成另一个字符串。

示例 1：
输入: s1 = "abc", s2 = "bca"
输出: true 

示例 2：
输入: s1 = "abc", s2 = "bad"
输出: false

说明：
0 <= len(s1) <= 100
0 <= len(s2) <= 100

来源：力扣（LeetCode）
链接：https://leetcode.cn/problems/check-permutation-lcci
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
"""
解析：如果str1和str2能够互相重排得到，那么两个字符串里面的字符类别和数量一定一致。
class Solution(object):
    def CheckPermutation(self, s1, s2):
        """
        :type s1: str
        :type s2: str
        :rtype: bool
        """
        dict1 = {}
        dict2 = {}
        for ele in s1:
            if ele not in dict1:
                dict1[ele] = 1
            else:
                dict1[ele] += 1
        for ele in s2:
            if ele not in dict2:
                dict2[ele] = 1
            else:
                dict2[ele] += 1
        return dict1==dict2
        
