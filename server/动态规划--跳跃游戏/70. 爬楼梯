"""
https://leetcode.cn/problems/climbing-stairs/
假设你正在爬楼梯。需要 n 阶你才能到达楼顶。
每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？

示例 1：
输入：n = 2
输出：2
解释：有两种方法可以爬到楼顶。
1. 1 阶 + 1 阶
2. 2 阶

示例 2：
输入：n = 3
输出：3
解释：有三种方法可以爬到楼顶。
1. 1 阶 + 1 阶 + 1 阶
2. 1 阶 + 2 阶
3. 2 阶 + 1 阶

解析：
经典爬楼梯问题，其中：f(n)=f(n-1)+f(n-2)。注意：处理好n=1,2的边界。

"""
class Solution:
    def climbStairs(self, n: int) -> int:
        stages = [0, 1, 2]
        if n <= 2:
            return stages[n]
        for i in range(n-2):
            stages.append(stages[-1] + stages[-2])
        return stages[n]

