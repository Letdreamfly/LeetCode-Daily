"""
https://leetcode.cn/problems/longest-increasing-subsequence/
给你一个整数数组 nums ，找到其中最长严格递增子序列的长度。
子序列 是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，[3,6,2,7] 是数组 [0,3,1,6,2,2,7] 的子序列。

示例 1：
输入：nums = [10,9,2,5,3,7,101,18]
输出：4
解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。

示例 2：
输入：nums = [0,1,0,3,2,3]
输出：4

示例 3：
输入：nums = [7,7,7,7,7,7,7]
输出：1
董涛
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
"""
class Solution(object):
    def lengthOfLIS(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        max_value = 1
        tmp_list = [1 for _ in range(len(nums))]
        tmp_value = 0
        for i in range(1, len(nums)):
            for j in range(i):
                if nums[j] < nums[i]:
                    tmp_value = max(tmp_value, tmp_list[j])
            tmp_list[i] = tmp_value + 1
            tmp_value = 0
            max_value = max(max_value, tmp_list[i])
        return max_value

