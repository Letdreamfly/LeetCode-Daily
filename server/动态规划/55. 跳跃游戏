"""
https://leetcode.cn/problems/jump-game/
55. 跳跃游戏
给定一个非负整数数组 nums ，你最初位于数组的 第一个下标 。
数组中的每个元素代表你在该位置可以跳跃的最大长度。
判断你是否能够到达最后一个下标。

示例 1：
输入：nums = [2,3,1,1,4]
输出：true
解释：可以先跳 1 步，从下标 0 到达下标 1, 然后再从下标 1 跳 3 步到达最后一个下标。

示例 2：
输入：nums = [3,2,1,0,4]
输出：false
解释：无论怎样，总会到达下标为 3 的位置。但该下标的最大跳跃长度是 0 ， 所以永远不可能到达最后一个下标。
"""
"""
方法一：
双重for循环，耗时n*n，超时了
"""
class Solution:
    def canJump(self, nums: List[int]) -> bool:
        length = len(nums)
        if length < 1:
            return False
        go_flag = [False for _ in range(len(nums))]
        go_flag[0] = True
        for i in range(length - 1):
            if go_flag[i]:
                for j in range(i+1, min(length, i + 1 + nums[i])):
                    go_flag[j] = True

        if go_flag[-1]:
            return True
        else:
            return False


