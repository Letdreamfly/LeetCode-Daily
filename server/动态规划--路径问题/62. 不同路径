"""
https://leetcode.cn/problems/unique-paths/
一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。
机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。
问总共有多少条不同的路径？

解析方案：
问题转化，假设有一个table，shape为m*n，根据题意即可将问题转化为：table[i][j] = table[i-1][j]+table[i][j-1]，然后把第一行和第一列特殊情况处理一下即可。
"""
class Solution:
    def uniquePaths(self, m: int, n: int) -> int:
        table = [[[] for i in range(n)] for j in range(m)]
        for i in range(m):
            for j in range(n):
                if i == 0:
                    table[i][j] = 1
                else:
                    if j == 0:
                        table[i][j] = table[i-1][j]
                    else:
                        table[i][j] = table[i-1][j] + table[i][j-1]
                        
        return table[-1][-1]
