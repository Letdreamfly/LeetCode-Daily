"""
https://www.nowcoder.com/practice/8b3b95850edb4115918ecebdf1b4d222
输入一棵节点数为 n 二叉树，判断该二叉树是否是平衡二叉树。
在这里，我们只需要考虑其平衡性，不需要考虑其是不是排序二叉树
平衡二叉树（Balanced Binary Tree），具有以下性质：它是一棵空树或它的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树。
"""
# -*- coding:utf-8 -*-
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    def IsBalanced_Solution(self, pRoot):
        # write code here
        if not pRoot:
            return True
        left_depth = self.Treedepth(pRoot.left)
        right_depth = self.Treedepth(pRoot.right)
        if abs(left_depth - right_depth)>1:
            return False
        return self.IsBalanced_Solution(pRoot.left) and self.IsBalanced_Solution(pRoot.right)
              
    def Treedepth(self, pRoot):
        if not pRoot:
            return 0
        left = self.Treedepth(pRoot.left) + 1
        right = self.Treedepth(pRoot.right) + 1
        return max(left,right)
