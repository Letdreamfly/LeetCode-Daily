"""
https://blog.csdn.net/freedomUSTB/article/details/105164509
二叉树_二叉树中和为某一值的路径
题目描述
输入一颗二叉树的根节点和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。
路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。
(注意: 在返回值的list中，数组长度大的数组靠前)
"""
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
#
# 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
#
# 
# @param root TreeNode类 
# @param target int整型 
# @return int整型二维数组
#
class Solution:
    def __init__(self):
        self.onepath = []
        self.pathall = []
        
    def FindPath(self , root: TreeNode, target: int) -> List[List[int]]:
        # write code here
        if not root:
            return self.pathall
        self.onepath.append(root.val)
        target -= root.val
        if target == 0 and not root.left and not root.right:
            self.pathall.append(self.onepath[:])
        
        self.FindPath(root.left, target)
        self.FindPath(root.right, target)
        self.onepath.pop()
        return self.pathall
