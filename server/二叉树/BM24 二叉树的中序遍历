"""
https://www.nowcoder.com/practice/0bf071c135e64ee2a027783b80bf781d
给定一个二叉树的根节点root，返回它的中序遍历结果。

数据范围：树上节点数满足 0 \le n \le 10000≤n≤1000，树上每个节点的值满足 -1000 \le val \le 1000−1000≤val≤1000
进阶：空间复杂度 O(n)O(n)，时间复杂度 O(n)O(n)

"""
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
#
# 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
# @param root TreeNode类 
# @return int整型一维数组
class Solution:
    def inorderTraversal(self , root: TreeNode) -> List[int]:
        # write code here
        if root == None:
            return []
        ans = self.inorder(root, [])
        return ans
        
    def inorder(self, root, ans):
        if root.left:
            self.inorder(root.left, ans)
        if root != None:
            ans.append(root.val)
        if root.right:
            self.inorder(root.right, ans)
        return ans
