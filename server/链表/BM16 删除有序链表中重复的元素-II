"""
https://www.nowcoder.com/practice/71cef9f8b5564579bf7ed93fbe0b2024
描述
给出一个升序排序的链表，删除链表中的所有重复出现的元素，只保留原链表中只出现一次的元素。
例如：
给出的链表为1 \to 2\to 3\to 3\to 4\to 4\to51→2→3→3→4→4→5, 返回1\to 2\to51→2→5.
给出的链表为1\to1 \to 1\to 2 \to 31→1→1→2→3, 返回2\to 32→3.

数据范围：链表长度 0 \le n \le 100000≤n≤10000，链表中的值满足 |val| \le 1000∣val∣≤1000
要求：空间复杂度 O(n)O(n)，时间复杂度 O(n)O(n)
进阶：空间复杂度 O(1)O(1)，时间复杂度 O(n)O(n)
示例1
输入：{1,2,2}
返回值：{1}

示例2
输入：{}
返回值：{}

"""
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None
#
# 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
#
# 
# @param head ListNode类 
# @return ListNode类
#
class Solution:
    def deleteDuplicates(self , head: ListNode) -> ListNode:
        # write code here
        newhead = ListNode(-1)
        phead = newhead
        phead.next = head
        while head and head.next:
            if head.val != head.next.val:
                phead = phead.next
                head = head.next
            else:
                tmp = head.val
                while head and head.val == tmp:
                    head = head.next
                phead.next = head
        return newhead.next
