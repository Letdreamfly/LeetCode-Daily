"""
https://leetcode.cn/problems/3sum-closest/
给你一个长度为 n 的整数数组 nums 和 一个目标值 target。请你从 nums 中选出三个整数，使它们的和与 target 最接近。
返回这三个数的和。
假定每组输入只存在恰好一个解。

示例 1：
输入：nums = [-1,2,1,-4], target = 1
输出：2
解释：与 target 最接近的和是 2 (-1 + 2 + 1 = 2) 。

示例 2：
输入：nums = [0,0,0], target = 1
输出：0
"""
class Solution:
    def threeSumClosest(self, nums: List[int], target: int) -> int:
        nums.sort()
        min_dist = 9999
        res = None
        for i in range(len(nums)-2):
            left = i+1
            right = len(nums)-1
            while left < right:
                sums = nums[i]+nums[left]+nums[right]
                if sums == target:
                    return target
                elif sums > target:
                    if abs(sums-target) < min_dist:
                        min_dist = abs(sums-target)
                        res = sums
                    right -= 1
                else:
                    if abs(sums-target) < min_dist:
                        min_dist = abs(sums-target)
                        res = sums
                    left += 1

        return res


